# 
# Synthesis run script generated by Vivado
# 

namespace eval rt {
    variable rc
}
set rt::rc [catch {
  uplevel #0 {
    set ::env(BUILTIN_SYNTH) true
    source $::env(HRT_TCL_PATH)/rtSynthPrep.tcl
    rt::HARTNDb_resetJobStats
    rt::HARTNDb_resetSystemStats
    rt::HARTNDb_startSystemStats
    rt::HARTNDb_startJobStats
    set rt::cmdEcho 0
    rt::set_parameter writeXmsg true
    rt::set_parameter enableParallelHelperSpawn true
    set ::env(RT_TMP) "F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/.Xil/Vivado-14260-DESKTOP-R1EC6M9/realtime/tmp"
    if { [ info exists ::env(RT_TMP) ] } {
      file delete -force $::env(RT_TMP)
      file mkdir $::env(RT_TMP)
    }

    rt::delete_design

    rt::set_parameter datapathDensePacking false
    set rt::partid xc7s25ftgb196-1
     file delete -force synth_hints.os

    set rt::multiChipSynthesisFlow false
    source $::env(SYNTH_COMMON)/common.tcl
    set rt::defaultWorkLibName xil_defaultlib

    set rt::useElabCache false
    if {$rt::useElabCache == false} {
      rt::read_verilog -sv -include f:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZBlocks/ZPhotonDetector_Block/ipshared/30ef F:/MySoftware/Xilinx/Vivado/2023.1/data/ip/xpm/xpm_cdc/hdl/xpm_cdc.sv
      rt::read_verilog -include f:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZBlocks/ZPhotonDetector_Block/ipshared/30ef {
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/.Xil/Vivado-14260-DESKTOP-R1EC6M9/realtime/ZPhotonDetector_Block_clk_wiz_0_0_stub.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/.Xil/Vivado-14260-DESKTOP-R1EC6M9/realtime/ZPhotonDetector_Block_ZPower_EN_0_0_stub.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/.Xil/Vivado-14260-DESKTOP-R1EC6M9/realtime/ZPhotonDetector_Block_ZEdge_Detect_0_0_stub.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/.Xil/Vivado-14260-DESKTOP-R1EC6M9/realtime/ZPhotonDetector_Block_ZMux2to1_0_0_stub.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/.Xil/Vivado-14260-DESKTOP-R1EC6M9/realtime/ZPhotonDetector_Block_ZUART_Data_Dump_0_0_stub.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/.Xil/Vivado-14260-DESKTOP-R1EC6M9/realtime/ZPhotonDetector_Block_ZTest_Generator_0_0_stub.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/.Xil/Vivado-14260-DESKTOP-R1EC6M9/realtime/ZPhotonDetector_Block_ZLed_Indicator_0_0_stub.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/.Xil/Vivado-14260-DESKTOP-R1EC6M9/realtime/ZPhotonDetector_Block_ZExtSig_Simulator_0_0_stub.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/.Xil/Vivado-14260-DESKTOP-R1EC6M9/realtime/ZPhotonDetector_Block_ZPulse_Counter_0_0_stub.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZPower/ZPower_EN.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZPulseCounter/ZEdge_Detect.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZBasic/ZMux2to1.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZUART/ZUART_Module.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZUART/ZUART_Module_BPS_Generator.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZUART/ZUART_Module_RX.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZUART/ZUART_Module_TX.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZUART/ZUART_Data_Dump.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZPulseCounter/ZTest_Generator.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZLed/ZLed_Indicator.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZPulseCounter/ZExtSig_Simulator.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZPulseCounter/ZPulse_Counter.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZBlocks/ZPhotonDetector_Block/synth/ZPhotonDetector_Block.v
      F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/ZVerilog/ZBlocks/ZPhotonDetector_Block/hdl/ZPhotonDetector_Block_wrapper.v
    }
      rt::read_vhdl -lib xpm F:/MySoftware/Xilinx/Vivado/2023.1/data/ip/xpm/xpm_VCOMP.vhd
      rt::filesetChecksum
    }
    rt::set_parameter usePostFindUniquification false
    set rt::top ZPhotonDetector_Block_wrapper
    rt::set_parameter enableIncremental true
    rt::set_parameter markDebugPreservationLevel "enable"
    set rt::reportTiming false
    rt::set_parameter elaborateOnly true
    rt::set_parameter elaborateRtl true
    rt::set_parameter eliminateRedundantBitOperator false
    rt::set_parameter linterFlow true
    rt::set_parameter synthReportEmptyAndUndriven false
    rt::set_parameter dataflowBusHighlighting false
    rt::set_parameter generateDataflowBusNetlist false
    rt::set_parameter dataFlowViewInElab false
    rt::set_parameter busViewFixBrokenConnections false
    rt::set_parameter elaborateRtlOnlyFlow true
    rt::set_parameter writeBlackboxInterface true
    rt::set_parameter merge_flipflops true
    rt::set_parameter srlDepthThreshold 3
    rt::set_parameter rstSrlDepthThreshold 4
# MODE: 
    rt::set_parameter webTalkPath {}
    rt::set_parameter synthDebugLog false
    rt::set_parameter printModuleName false
    rt::set_parameter enableSplitFlowPath "F:/MyTemporary/Github/PhotonDetector/Processing_Board/Firmware/ZPhotonDetector/.Xil/Vivado-14260-DESKTOP-R1EC6M9/"
    set ok_to_delete_rt_tmp true 
    if { [rt::get_parameter parallelDebug] } { 
       set ok_to_delete_rt_tmp false 
    } 
    if {$rt::useElabCache == false} {
        set oldMIITMVal [rt::get_parameter maxInputIncreaseToMerge]; rt::set_parameter maxInputIncreaseToMerge 1000
        set oldCDPCRL [rt::get_parameter createDfgPartConstrRecurLimit]; rt::set_parameter createDfgPartConstrRecurLimit 1
        $rt::db readXRFFile
      rt::run_rtlelab -module $rt::top
        rt::set_parameter maxInputIncreaseToMerge $oldMIITMVal
        rt::set_parameter createDfgPartConstrRecurLimit $oldCDPCRL
    }

    set rt::flowresult [ source $::env(SYNTH_COMMON)/flow.tcl ]
    rt::HARTNDb_stopJobStats
    if { $rt::flowresult == 1 } { return -code error }


  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  rt::set_parameter helper_shm_key "" 
    if { [ info exists ::env(RT_TMP) ] } {
      if { [info exists ok_to_delete_rt_tmp] && $ok_to_delete_rt_tmp } { 
        file delete -force $::env(RT_TMP)
      }
    }

    source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  } ; #end uplevel
} rt::result]

if { $rt::rc } {
  $rt::db resetHdlParse
  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  return -code "error" $rt::result
}
